$grid-size: 1200px;
$gutter-size: 10px;

$breakpoint-phone: 320;
$breakpoint-tablet: 480;
$breakpoint-desktop: 720;

/**
Progressive enhancement mixin designed to
target devices greater than the specified
size.
*/
@mixin minwidth($minw) {
  @media (min-width: ($minw/16+em)) {
    @content;
  }
}

/**
Mixin designed for setting columns
at different breakpoints
*/
@mixin columns {
  /**
  one column layout
  */
  &1 {
    *[class^="flex"] {
      -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
    }
  }
  /**
  two column layout
  */
  &2 {
    *[class^="flex"] {
      -ms-flex-preferred-size: calc(50% - (2 * #{$gutter-size}));
      flex-basis: calc(50% - (2 * #{$gutter-size}));
    }
  }
  /**
  three column layout
  */
  &3 {
    *[class^="flex"] {
      -ms-flex-preferred-size: calc(33.33% - (2 * #{$gutter-size}));
      flex-basis: calc(33.33% - (2 * #{$gutter-size}));
    }
  }
  /**
  four column layout
  */
  &4 {
    *[class^="flex"] {
      -ms-flex-preferred-size: calc(25% - (2 * #{$gutter-size}));
      flex-basis: calc(25% - (2 * #{$gutter-size}));
    }
  }
  /**
  5 column layout
  */
  &5 {
    *[class^="flex"] {
      -ms-flex-preferred-size: calc(20% - (2 * #{$gutter-size}));
      flex-basis: calc(20% - (2 * #{$gutter-size}));
    }
  }
  /**
  6 column layout
  */
  &6 {
    *[class^="flex"] {
      -ms-flex-preferred-size: calc(16.67% - (2 * #{gutter-size}));
      flex-basis: calc(16.66% - (2 * #{$gutter-size}));
    }
  }
}

/**
Account for margin when specifying width.
*/
*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.container-flex {
  display: block;
  width: 100%;
  margin: auto;

  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  max-width: $grid-size;
  margin-bottom: calc(2 * #{$gutter-size});

  /**
  Classes used to allocate additional space
  between all children. flex-0 gives no extra
  space.
  */
  .flex- {
    &0 {
      -webkit-box-flex: 0;
      -ms-flex: 0;
      flex: 0;
    }
    &1 {
      -webkit-box-flex: 1;
      -ms-flex: 1;
      flex: 1;
    }
    &2 {
      -webkit-box-flex: 2;
      -ms-flex: 2;
      flex: 2;
    }
    &3 {
      -webkit-box-flex: 3;
      -ms-flex: 3;
      flex: 3;
    }
    &4 {
      -webkit-box-flex: 4;
      -ms-flex: 4;
      flex: 4;
    }
  }

  /**
  Set number of columns for specified class.
  Currently has issue with gutters and box-sizing
  set to border-box
  */
  &.column- {
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;

    /**
    columns for phone breakpoint
    */
    &phone- {
      @include minwidth($breakpoint-phone) {
        @include columns;
      }
    }
    /**
    columns for tablet breakpoint
    */
    &tablet- {
      @include minwidth($breakpoint-tablet) {
        @include columns;
      }
    }
    /**
    columns for desktop breakpoint
    */
    &desktop- {
      @include minwidth($breakpoint-desktop) {
        @include columns;
      }
    }
  }

  /**
  Fill gutter along edges and between children
  */
  &.gutter {
    *[class^="flex"] {
      margin: 0 $gutter-size;
    }
  }

  /**
  Fill gutter along edges excluding children
  */
  &.gutter-edge {
    *[class^="flex"] {
      margin: 0;
    }
    *[class^="flex"]:first-child {
      margin-left: $gutter-size;
    }
    *[class^="flex"]:last-child {
      margin-right: $gutter-size;
    }
  }

  /**
  Fill gutter between children excluding edges
  */
  &.gutter-between {
    *[class^="flex"] {
      margin: 0 $gutter-size;
    }
    *[class^="flex"]:first-child {
      margin-left: 0;
    }
    *[class^="flex"]:last-child {
      margin-right: 0;
    }
  }
}

